package jp.co.notebook.controller;

import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import jakarta.servlet.http.HttpSession;
import jp.co.notebook.bean.UpdateUserBean;
import jp.co.notebook.entity.Note;
import jp.co.notebook.entity.User;
import jp.co.notebook.service.NoteService;
import jp.co.notebook.service.RoleService;
import jp.co.notebook.service.UserService;

@Controller
public class AdminController {
	@Autowired
	NoteService noteService;
	@Autowired
	UserService userService;
	@Autowired
	RoleService roleService;

	@GetMapping("/admin/showAllUser")
	public String showAllUser(Model model, HttpSession session) {
		List<User> users = this.userService.handleFindAllUser();
		User user = this.userService.handleFindByEmail((String) session.getAttribute("email"));
		model.addAttribute("user", user);
		model.addAttribute("users", users);
		return "admin/users_show";
	}

	@GetMapping("/admin/view/user/{id}")
	public String viewUserDetail(@PathVariable long id, Model model) {
		User user = this.userService.handleFindById(id);
		model.addAttribute("user", user);
		return "admin/user_detail";
	}

	@GetMapping("/admin/userMemoList/{id}")
	public String userMemoList(@PathVariable long id, Model model) {
		User user = this.userService.handleFindById(id);
		model.addAttribute("notes", this.noteService.handleFindAllByUser(user));
		return "admin/user_memo_list";
	}

	@GetMapping("/admin/delete/user/{id}")
	public String deleteUser(@PathVariable long id, Model model) {
		this.userService.handleDeleteUserById(id);
		return "redirect:/admin/showAllUser";
	}

	@GetMapping("/admin/update/user/{id}")
	public String updateeUser(@PathVariable long id, Model model) {
		User user = this.userService.handleFindById(id);
		model.addAttribute("user", user);
		return "admin/user_update";
	}

	@PostMapping("/admin/user/update/{id}")
	public String doUpdateUser(UpdateUserBean beanUser) {
		User user = this.userService.handleFindById(beanUser.getId());
		BeanUtils.copyProperties(beanUser, user);
		user.setRole(this.roleService.handleFindRoleById(beanUser.getRole()));
		this.userService.handleSaveUser(user);
		return "redirect:/admin/view/user/{id}";
	}

	@GetMapping("/admin/view/memo/{id}")
	public String viewNote(HttpSession session, @PathVariable long id, Model model) {
		Note note = this.noteService.handleFindById(id);
		model.addAttribute("note", note);
		model.addAttribute("userId", note.getUser().getId());
		return "note_view";
	}
}
