package jp.co.attendance.Controller;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import jp.co.attendance.Domain.Attendance;
import jp.co.attendance.Domain.Employee;
import jp.co.attendance.Service.AttendanceService;
import jp.co.attendance.Service.EmployeeService;

@Controller
public class UserController {
	@Autowired
	EmployeeService employeeService;

	@Autowired
	AttendanceService attendanceService;

	@RequestMapping("/")
	public String homePage() {
		return "index";
	}

	@RequestMapping("/checkin")
	public String checkin() {
		Employee employee = this.employeeService.findEmployee(3);
		Date date = new Date();
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String newdate = df.format(date);
		Attendance attendance = new Attendance();
		Attendance attendanceTemp = this.attendanceService.findByEmployeeId(3);

		if (attendanceTemp == null) {
			attendance.setComein(date);
			attendance.setEmployee(employee);
			attendance.setAttendance_date(newdate);
			this.attendanceService.handleSave(attendance);
		} else {
			if (attendanceTemp.getAttendance_date().equals(newdate)) {
				attendance.setId(attendanceTemp.getId());
				attendance.setComein(date);
				attendance.setEmployee(employee);
				attendance.setAttendance_date(newdate);
				this.attendanceService.handleSave(attendance);
			}
		}
		return "redirect:/";
	}

	@RequestMapping("/checkout")
	public String checkout() {
		Employee employee = this.employeeService.findEmployee(3);
		Date date = new Date();
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String newdate = df.format(date);
		Attendance attendance = new Attendance();
		Attendance attendanceTemp = this.attendanceService.findByEmployeeId(3);

		if (attendanceTemp == null) {
			attendance.setLeave(date);
			attendance.setEmployee(employee);
			attendance.setAttendance_date(newdate);
			this.attendanceService.handleSave(attendance);
		} else {
			if (attendanceTemp.getAttendance_date().equals(attendance.getAttendance_date())) {
				attendance.setLeave(date);
				attendance.setEmployee(employee);
				attendance.setAttendance_date(newdate);
				this.attendanceService.handleSave(attendance);
			}
		}
		return "redirect:/";
	}

}
