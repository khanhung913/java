package jp.co.sss.shop.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;
import jp.co.sss.shop.form.LoginForm;
import jp.co.sss.shop.form.LoginFormWithValidation;

@Controller
public class SessionController {
	@RequestMapping(path = "/login", method = RequestMethod.GET)
	public String login() {
		return "session/login";
	}

	@RequestMapping(path = "/doLogin", method = RequestMethod.POST)
	public String doLoginGet(Integer userId) {
		System.out.println("ユーザ ID:" + userId);
		return "session/login";
	}

	@RequestMapping(path = "/loginUsingForm", method = RequestMethod.GET)
	public String loginUsingForm() {
		return "session/login_using_form";
	}

	@RequestMapping(path = "/doLoginUsingForm", method = RequestMethod.POST)
	public String doLoginUsingForm(LoginForm loginForm) {
		System.out.println("id:" + loginForm.getUserId());
		System.out.println("pass:" + loginForm.getPassword());
		return "session/login_using_form";
	}

	@GetMapping("/loginOnRequest")
	public String loginOnRequest() {
		return "session/login_on_request";
	}

	@PostMapping("/doLoginOnRequest")
	public String doLoginOnRequest(LoginForm form, Model model) {
		model.addAttribute("userId", form.getUserId());
		return "session/login_on_request";
	}

	@RequestMapping("/loginOnSession")
	public String loginOnSession() {
		return "session/login_on_session";
	}

	@PostMapping("/doLoginOnSession")
	public String doLoginOnSession(LoginForm form, HttpSession session) {
		if (form.getUserId() == 123) {
			session.setAttribute("userId", 123);
			return "redirect:/";
		} else {
			return "session/login_on_session";
		}
	}

	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "redirect:/";
	}

	@GetMapping("/loginWithValidation")
	public String loginWithValidation(@ModelAttribute LoginFormWithValidation form) {
		return "session/login_with_validation";
	}

	@PostMapping("/loginWithValidation")
	public String doLoginWithValidation(@Valid @ModelAttribute LoginFormWithValidation form, BindingResult result,
			HttpSession session) {
		if (result.hasErrors()) {
			return "session/login_with_validation";
		}
	}

}